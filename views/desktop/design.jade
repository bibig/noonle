extends ./layout/full

block design
	style(type="text/css")
		#{node.safeCss}

block asserts
	link(rel='stylesheet', href='http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css')
	link(rel='stylesheet', href='/asserts/stylesheets/jquery.miniColors.css')
	script(src='http://code.jquery.com/ui/1.9.2/jquery-ui.js')
	script(src='/asserts/javascripts/theme.color.js')
	script(src='/asserts/javascripts/jquery.miniColors.js')
	script(src='/asserts/javascripts/jquery.fontSelector.js')
	

block main
	mixin ulTemplates(all)
		ul.templates
			- var i = 1
			each template in all
				mixin liTemplate(i, template)
				- i++
				
	mixin liTemplate(id, template)
		li.template
			.mini-paper(style="background-color: #{template[1]}", onclick="preview(this, #{id})")
				.mini-paper-title(style="background-color: #{template[2]};")
					a(style="color: #fff;") ##{id}
				.mini-paper-content.mini-paper-catalog(style="background-color: #{template[4]}; color: #222;")
					| #{template[0]}
	
	mixin ulpatterns(names)
		ul.patterns
			each name in names
				mixin liPattern(name)
			li.pattern
				button.btn.btn-danger.btn-block(onclick="removePattern()")
					i.icon-remove.icon-white
					| 
					= __i('remove current background')
					
	mixin liPattern(name)
		li.pattern(title="#{name}", style="background: url(/asserts/images/patterns/#{name}) repeat", onclick="previewPattern(this, '#{name}')")
	
	#design-sidebar.ui-widget-content
		#accordion
			h3 #{__i('template')}
			div
				mixin ulTemplates(templates)
			h3 #{__i('background')}
			div
				mixin ulpatterns(patterns)
			h3 #{__i('palette')}
			div
				form#designPanel(onsubmit="return false;")
					h5 #{__i('web')}
					input.color(type="minicolors",  data-swatch-position="left",  name="backgroundColor")
					span.label
						= __i('bg')
					br
					h5 #{__i('title')}
					input.color(type="minicolors",  data-swatch-position="left",  name="bgOfTitle")
					span.label
						= __i('bg')
					input.color(type="minicolors",  data-swatch-position="left",  name="fgOfTitle")
					span.label
						= __i('fg')
					h5 #{__('content')}
					input.color(type="minicolors",  data-swatch-position="left",  name="bgOfContent")
					span.label
						= __i('bg')
					br
					input.color(type="minicolors",  data-swatch-position="left",  name="fgOfContent")
					span.label
						= __i('fg')
					br
					input.color(type="minicolors",  data-swatch-position="left",  name="anchorInContent")
					span.label
						= __i('link')
					
					- if (node.pageCount)
						h5 #{__i('catalog')}
						input.color(type="minicolors",  data-swatch-position="left",  name="bgOfCatalog")
						span.label
							= __i('bg')
						br
						input.color(type="minicolors",  data-swatch-position="left",  name="anchorInCatalog")
						span.label
							= __i('link')
			h3 #{__i('font')}
			div
				mixin fontSlide(name)
					.row-fluid
						.span3
							span.label #{__i('font')}
						.span9
							input.fontSelector(name="#{name}")
					span
						span.label
							= __i('font size')
						| 
						span.label.label-info
							span(id="#{name}-size-label")
					div(id="#{name}-size-slide", style="width: 140px; margin: 10px;")
					
				form#fontPanel(onsubmit="return false;")
					h5 #{__i('title')}
					mixin fontSlide('fontOfTitle')
					hr
					h5 #{__i('content')}
					mixin fontSlide('fontOfContent')
					- if (node.pageCount)
						hr
						h5 #{__i('catalog')}
						mixin fontSlide('fontOfCatalog')

		.saveDesign
			form.customize(id="designForm", action="/design/#{node.id}", method="post")
				input(type="hidden", name="_csrf", value="#{token}")
				input(type="hidden", name="css")
				button.btn.btn-block.btn-success.btn-large.disabled(onclick="return submitCss()", disabled="disabled")
					= __i('save')
		
	- var _nodeBox = {node: node, isAdmin: isAdmin}
	include _nodeBox
			
	
	script
		
		var inputSelectorMaps = {
			'backgroundColor': ['body', 'background-color'],
			'backgroundImage': ['body', 'background-image'],
			'backgroundPosition': ['body', 'background-position'],
			'backgroundAttachment': ['body', 'background-attachement'],
			'backgroundRepeat': ['body', 'background-repeat'],
			'bgOfTitle': ['.paper .paper-title', 'background-color'],
			'bgOfContent': ['.paper .paper-content', 'background-color'],
			'bgOfCatalog': ['.paper .paper-catalog', 'background-color'],
			'fgOfTitle': ['.paper .paper-title a', 'color'],
			'fgOfContent': ['.paper .paper-content', 'color'],
			'anchorInContent': ['.paper .paper-content a', 'color'],
			'anchorInCatalog': ['.paper .paper-catalog a', 'color']
		};
		
		$(document).ready( function () {
			var bodyheight = $(document).height();
			$("design-sidebar").height(bodyheight);
			
			$( "#accordion" ).accordion({
				heightStyle: "fill"
			});
			
			// for the window resize
			$(window).resize(function() {
				var bodyheight = $(document).height();
				$("design-sidebar").height(bodyheight);
				$( "#accordion" ).accordion( "refresh" );
			});
			
			// darkCatalog();
			// darkAnchor();
			extractCss();
			inputsOnChange();
			$.minicolors.init();
		});
		
		$(function() {
			$('input[name="fontOfTitle"]').val($(".node-title a").css('font-family'));
			$('input[name="fontOfContent"]').val($(".paper-content").css('font-family'));
			$('input[name="fontOfCatalog"]').val($(".paper-catalog").css('font-family'));
			
			$('input[name="fontOfTitle"]').change(function () {
				enableSave();
				$(".node-title a").css('font-family', $('input[name="fontOfTitle"]').val());
			});
			$('input[name="fontOfContent"]').change(function () {
				enableSave();
				$(".paper-content").css('font-family', $('input[name="fontOfContent"]').val());
			});
			$('input[name="fontOfCatalog"]').change(function () {
				enableSave();
				$(".paper-catalog a").css('font-family', $('input[name="fontOfCatalog"]').val());
			});
			
			$('input.fontSelector').fontSelector();
			
			$("#fontOfTitle-size-label").text($(".node-title a").css('font-size').replace('px', ''));
			$("#fontOfTitle-size-slide").slider({
				orientation: "horizontal",
				value: $("#fontOfTitle-size-label").text(),
				min: 12,
				max: 72,
				range: "min",
				animate: true,
				slide: function( event, ui ) {
					enableSave();
					$(".node-title a").css('font-size', ui.value);
					$("#fontOfTitle-size-label").text(ui.value);
				}
			});
			
			$("#fontOfContent-size-label").text($(".paper-content").css('font-size').replace('px', ''));
			$("#fontOfContent-size-slide").slider({
				value: $("#fontOfContent-size-label").text(),
				min: 12,
				max: 28,
				orientation: "horizontal",
				range: "min",
				animate: true,
				slide: function( event, ui ) {
					enableSave();
					$(".paper-content, .paper-content a").css('font-size', ui.value);
					$("#fontOfContent-size-label").text(ui.value);
				}
			});
			
			$("#fontOfCatalog-size-label").text($(".paper-catalog a").css('font-size').replace('px', ''));
			$("#fontOfCatalog-size-slide").slider({
				value: $("#fontOfCatalog-size-label").text(),
				min: 12,
				max: 30,
				orientation: "horizontal",
				range: "min",
				animate: true,
				slide: function( event, ui ) {
					enableSave();
					$(".paper-catalog a").css('font-size', ui.value);
					$("#fontOfCatalog-size-label").text(ui.value);
				}
			});
		});
		
		function enableSave () {
			$('button', ".saveDesign").removeProp('disabled').removeClass('disabled');
		}
		
		function preview (me, id) {
			$("body").css('background-color', $(me).css('background-color'));
			copyColor(me, ['paper-title', 'paper-content', 'paper-catalog'], 'background-color');
			copyColor(me, ['paper-content', 'paper-catalog'], 'color');
			copyColor(me, ['paper-title a', 'paper-content a', 'paper-catalog a'], 'color');
			setValueOfTheme(me);
			darkAnchor();
			enableSave();
		}
		
		function previewPattern (me, name) {
			$("body").css('background-image', $(me).css('background-image'));
			$("body").css('background-repeat', $(me).css('background-repeat'));
			$("body").css('background-attachment', $(me).css('background-attachment'));
			enableSave();
		}
		
		function removePattern () {
			$("body").css('background-image', 'none');
		}
		
		function copyColor (me, items, property) {
			var v;
			for (var i = 0; i< items.length; i++) {
				if (v = $('.mini-' + items[i], me).css(property)) {
					console.log('want to copy ' + items[i]);
					console.log(property + '=' + v);
					$('.' + items[i], ".paper").css(property, v);
				} 
			}
		}
		
		function setValueOfTheme (me) {
			var anchorColor = getDynamicAnchorColor();
			
			$('input[name="backgroundColor"]', "#designPanel").val(rgb2hex($(me).css('background-color')));
			$('input[name="bgOfTitle"]', "#designPanel").val(rgb2hex($('.mini-paper-title', me).css('background-color')));
			$('input[name="bgOfContent"], input[name="bgOfCatalog"]', "#designPanel").val(rgb2hex($('.mini-paper-content', me).css('background-color')));
			
			$('input[name="fgOfTitle"]', "#designPanel").val(rgb2hex($('.mini-paper-title', me).css('color')));
			$('input[name="fgOfContent"]', "#designPanel").val(rgb2hex($('.mini-paper-content', me).css('color')));
			
			$('input[name="anchorInContent"]', "#designPanel").val(anchorColor);
			$('input[name="anchorInCatalog"]', "#designPanel").val(anchorColor);
			
			$.minicolors.refresh();
		}
		
		function inputsOnChange () {
			$('input, select', "#designPanel").change(function () {
				enableSave();
				var target = inputSelectorMaps[$(this).attr('name')];
				$(target[0]).css(target[1], $(this).val());
			});
		}
		
		function getDynamicAnchorColor () {
			return shadeColor(rgb2hex($(".paper-title", ".paper").css('background-color')), -50);
		}
		
		function darkAnchor () {
			var color = getDynamicAnchorColor();
			$("a", ".paper-content").css('color', color);
			$("a", ".paper-catalog").css('color', color);
		}
		
		function submitCss () {
			exportCss();
			$('#designForm').submit();
		}
		
		function exportCss () {
			var selectors = {
				'body': ['background-color', 'background-image', 'background-repeat', 'background-position', 'background-attachment'], 
				'.paper .paper-title': ['background-color'], 
				'.paper .paper-content': ['background-color', 'color', 'font-family', 'font-size'], 
				'.paper .paper-catalog': ['background-color', 'color'],
				'.paper .paper-title a': ['color'], 
				'.paper .paper-content a': ['color'], 
				'.paper .paper-catalog a': ['color', 'font-family', 'font-size'],
				'.node-title a': ['font-family', 'font-size']
			};
			var cssStr = '';
			
			for (var name in selectors) {
				var properties = selectors[name];
				var str = '';
				var value;
				for (var i = 0; i < properties.length; i++) {
					if (value = $(name).css(properties[i])) {
						str += properties[i] + ':' + value + ';';
					}
				}
				cssStr += name+ '{' + str + '}';
			}
			
			$('input[name="css"]', '#designForm').val(cssStr);
			console.log('cssStr:' + cssStr);
			
		}
		
		function extractCss () {
			// console.log('ready to extract css');
			for (var input in inputSelectorMaps) {
				var selector = inputSelectorMaps[input][0];
				var property = inputSelectorMaps[input][1];
				var value = $(selector).css(property);
				// console.log(selector + ':' + property + '=' + value);
				if (!value) continue;
				
				switch (property) {
					case 'color':
						value = rgb2hex(value);
						break;
					case 'background-color':
						if (value === 'rgba(0, 0, 0, 0)' || value === 'transparent') {
							value = getBackground($(selector).parent());
						}
						value = rgb2hex(value);
						break;
				}
				
				// console.log('ready to set ' + input + '=' + value);
				$('input[name="' + input + '"]', '#designPanel').val(value);
			}
		}